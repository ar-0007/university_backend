const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');

// Configuration from the application
const JWT_SECRET = 'A_VERY_STRONG_RANDOM_SECRET_FOR_JWT_SIGNING';
const SALT_ROUNDS = 10;

// Admin user details (you can modify these as needed)
const adminUser = {
 // id: 'admin-user-id', // This would normally be a UUID generated by the database
  email: 'admin@example.com',
  firstName: 'Admin',
  lastName: 'User',
  role: 'ADMIN',
  isActive: true
};

async function generateAdminCredentials() {
  try {
    // 1. Generate a temporary password
    const tempPassword = Math.random().toString(36).slice(-8);
    console.log('Temporary Password:', tempPassword);
    
    // 2. Hash the password using the same method as the application
    const salt = await bcrypt.genSalt(SALT_ROUNDS);
    const hashedPassword = await bcrypt.hash(tempPassword, salt);
    
    console.log('\nHashed Password:', hashedPassword);
    console.log('Salt:', salt);
    
    // 3. Generate a JWT token with the same payload structure as the application
    const payload = {
      //id: adminUser.id,
      email: adminUser.email,
      role: adminUser.role,
      isActive: adminUser.isActive,
    };
    
    const token = jwt.sign(payload, JWT_SECRET, { expiresIn: '1h' });
    
    console.log('\nJWT Token:', token);
    
    // 4. Display the complete admin credentials
    console.log('\n=== ADMIN CREDENTIALS ===');
    console.log('Email:', adminUser.email);
    console.log('Temporary Password:', tempPassword);
    console.log('Hashed Password:', hashedPassword);
    console.log('Salt:', salt);
    console.log('JWT Token:', token);
    console.log('========================');
    
    return {
      user: adminUser,
      tempPassword,
      hashedPassword,
      salt,
      token
    };
  } catch (error) {
    console.error('Error generating admin credentials:', error);
    throw error;
  }
}

// Run the function if this script is executed directly
if (require.main === module) {
  generateAdminCredentials().catch(console.error);
}

module.exports = { generateAdminCredentials };